"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DiffVersionCommand = void 0;
const axios_1 = __importDefault(require("axios"));
const parsePackageDiff_1 = require("../parser/parsePackageDiff");
class DiffVersionCommand {
    constructor() {
        this.command = "diff:package";
        this.deprecated = false;
        this.describe = "Compare package.json specific dependency change between tags";
    }
    builder(args) {
        return args
            .options("c", {
            alias: "config",
            demandOption: false,
            describe: "config name ex: ioe (config/ioe.json)"
        })
            .options("r", {
            alias: "repo",
            demandOption: false,
            describe: "Github <OWNER>/<REPOSITORY>"
        })
            .options("s", {
            alias: "start",
            demandOption: false,
            describe: "Start compare tag"
        })
            .options("e", {
            alias: "end",
            demandOption: false,
            describe: "End compare tag"
        })
            .options("t", {
            alias: "token",
            demandOption: false,
            describe: "Github api token"
        })
            .options("p", {
            alias: "path",
            default: "package.json",
            demandOption: false,
            describe: "Package.json path"
        })
            .options("n", {
            alias: "name",
            demandOption: false,
            describe: "Compare diff target package name"
        });
    }
    async handler(args) {
        if (args.config) {
            process.env["NODE_CONFIG_ENV"] = args.config;
            const config = require("config");
            args = Object.assign(Object.assign(Object.assign({}, config), args), { path: config.path || args.path });
        }
        const res = await axios_1.default
            .get(`https://api.github.com/repos/${args.repo}/compare/${args.start}...${args.end}`, {
            headers: {
                Authorization: `token ${args.token}`
            }
        });
        const diffFile = res.data.files.find((file) => file.filename === args.path);
        if (!diffFile) {
            console.info(`${args.path} change not found`);
            return;
        }
        const [before, after] = parsePackageDiff_1.parsePackageDiff(args.name, diffFile.patch);
        console.log(`Path: ${args.path}\nPackage: ${args.name}\nBefore: ${before}\nAfter: ${after}`);
    }
}
exports.DiffVersionCommand = DiffVersionCommand;
//# sourceMappingURL=DiffVersionCommand.js.map